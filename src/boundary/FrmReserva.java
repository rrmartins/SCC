package boundary;

import control.ControladoraReserva;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import util.ConexaoException;
import util.MinhaException;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Reserva.java
 *
 * Created on 24/06/2010, 23:43:17
 */

public class FrmReserva extends javax.swing.JDialog {

    ControladoraReserva controlReserva;
    Vector NomeGC, gC = new Vector();
    DefaultComboBoxModel grupoCar = new DefaultComboBoxModel();
    int codTipoCarro, codGrupoCarro, codCliente;
    private static Vector usuario = new Vector();
    private static Vector usuarioTipo = new Vector();
    private Vector usua = new Vector();
    /** Creates new form Reserva
     * @param userTipo
     * @param user
     * @throws ConexaoException
     * @throws SQLException 
     */
    public FrmReserva(Vector userTipo, Vector user) throws MinhaException, SQLException, ConexaoException {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setModal(true);
        this.controlReserva = new ControladoraReserva();
        this.jCBGrupoCarro.removeAllItems();
        NomeGC = controlReserva.obertNomeGrupoCarro();
        usuario = user;
        for (int i = 0; i < NomeGC.size(); i++) {
            grupoCar.addElement(NomeGC.elementAt(i));
        }
        jCBGrupoCarro.setModel(grupoCar);
        
    }


    public void converteDataVetor(int[] dataInicio, int[] dataFim, Date dataLoca, Date dataEntre)
    {
        Calendar calendarI = Calendar.getInstance();
        calendarI.setTime(dataLoca);

        dataInicio[0] = calendarI.get(Calendar.DAY_OF_MONTH);
        dataInicio[1] = calendarI.get(Calendar.MONTH);
        dataInicio[2] = calendarI.get(Calendar.YEAR);

        Calendar calendarF = Calendar.getInstance();
        calendarF.setTime(dataEntre);

        dataFim[0] = calendarF.get(Calendar.DAY_OF_MONTH);
        dataFim[1] = calendarF.get(Calendar.MONTH);
        dataFim[2] = calendarF.get(Calendar.YEAR);
    }

    public int calcularDatas(Date dataLoca, Date dataEntre)
    {

        int[] dataInicio = new int[3];
        int[] dataFim = new int[3];

        long diffMillis, diffDays = 0;

        converteDataVetor(dataInicio, dataFim, dataLoca, dataEntre);

        Calendar dataI = new GregorianCalendar(dataInicio[2], dataInicio[1], dataInicio[0]);
        Calendar dataF = new GregorianCalendar(dataFim[2], dataFim[1], dataFim[0]);

        if(dataF.before(dataI)){
            JOptionPane.showMessageDialog(null, " A data de Entrega não  pode ser antes da data de Locação !", "Informação", JOptionPane.INFORMATION_MESSAGE);
        }

        else{
            diffMillis = dataF.getTimeInMillis() - dataI.getTimeInMillis();

            diffDays = diffMillis / (24*60*60*1000);

        }

        int dias = (int) diffDays;

        return dias;

    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        bGPlano = new javax.swing.ButtonGroup();
        bGCobertura = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jDCDataRetirada = new com.toedter.calendar.JDateChooser();
        jCBHoraRetirada = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jDCDataEntrega = new com.toedter.calendar.JDateChooser();
        jCBHoraEntrega = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTFKMPrevista = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jRBSim = new javax.swing.JRadioButton();
        jRBNao = new javax.swing.JRadioButton();
        jCBGrupoCarro = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTFValorPrevisto = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jBVisualizarGrupo = new javax.swing.JButton();
        jCBPlano = new javax.swing.JComboBox();
        jBConfirmar = new javax.swing.JButton();
        jBCancelar = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SCC - Reserva");

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel7.setText("Plano");

        jLabel5.setText("Retirada");

        jLabel1.setText("Data da Retirada");

        jCBHoraRetirada.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "08:00", "09:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00" }));

        jLabel2.setText("Hora da Retirada");

        jLabel10.setText("Entrega");

        jLabel3.setText("Data da Entrega");

        jCBHoraEntrega.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "08:00", "09:00", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00" }));

        jLabel4.setText("Hora da Entrega");

        jLabel6.setText("Grupo de Carro");

        jLabel12.setText("Quilometragem Prevista");

        jTFKMPrevista.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFKMPrevistaFocusLost(evt);
            }
        });

        jLabel13.setText("Km");

        jLabel8.setText("Cobertura");

        bGCobertura.add(jRBSim);
        jRBSim.setText("Sim");

        bGCobertura.add(jRBNao);
        jRBNao.setSelected(true);
        jRBNao.setText("Não");

        jCBGrupoCarro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione um Grupo de Carro" }));

        jLabel9.setForeground(new java.awt.Color(255, 0, 51));
        jLabel9.setText("VALOR PREVISTO");

        jLabel11.setText("R$");

        jTFValorPrevisto.setEditable(false);

        jBVisualizarGrupo.setText("Visualizar Grupo");
        jBVisualizarGrupo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVisualizarGrupoActionPerformed(evt);
            }
        });

        jCBPlano.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Diaria Quilometrada", "Diaria Simples" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jRBSim)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRBNao))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1)
                            .addComponent(jDCDataRetirada, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jCBHoraRetirada, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jDCDataEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(33, 33, 33)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jCBHoraEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jLabel6)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel8)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jCBPlano, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(43, 43, 43)
                                        .addComponent(jLabel12))
                                    .addComponent(jLabel7)
                                    .addComponent(jCBGrupoCarro, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel11)
                                .addGap(4, 4, 4)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(jTFKMPrevista)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel13))
                                .addComponent(jBVisualizarGrupo, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jTFValorPrevisto, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE))
                .addGap(21, 21, 21))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDCDataRetirada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCBHoraRetirada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDCDataEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCBHoraEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBVisualizarGrupo)
                    .addComponent(jCBGrupoCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jTFKMPrevista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCBPlano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRBSim)
                    .addComponent(jRBNao))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFValorPrevisto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel9))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jBConfirmar.setText("Confirmar");
        jBConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConfirmarActionPerformed(evt);
            }
        });

        jBCancelar.setText("Cancelar");
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(348, Short.MAX_VALUE)
                .addComponent(jBCancelar)
                .addGap(15, 15, 15)
                .addComponent(jBConfirmar)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBCancelar)
                    .addComponent(jBConfirmar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed

        this.dispose();

    }//GEN-LAST:event_jBCancelarActionPerformed

    private void jBVisualizarGrupoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBVisualizarGrupoActionPerformed
        // TODO add your handling code here:
        String nome = (String) this.jCBGrupoCarro.getSelectedItem();
        try {
            gC = controlReserva.obertGrupoCarro(nome);
        } catch (ConexaoException ex) {
            Logger.getLogger(FrmReserva.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FrmReserva.class.getName()).log(Level.SEVERE, null, ex);
        }catch (MinhaException ex) {
                Logger.getLogger(FrmReserva.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        new FrmVisualizarGrupoCarro(null, true, gC).setVisible(true);
    }//GEN-LAST:event_jBVisualizarGrupoActionPerformed

    @SuppressWarnings("unchecked")
    private void jBConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConfirmarActionPerformed
        // TODO add your handling code here:
        if (!this.jDCDataRetirada.getDateFormatString().isEmpty())
        {
            if (!this.jDCDataEntrega.getDateFormatString().isEmpty())
            {
                if (!this.jTFKMPrevista.getText().isEmpty())
                {

                    Date dataAtual = new Date();
                    Date dataRetirada = jDCDataRetirada.getDate();
                    Date dataEntrega     = jDCDataEntrega.getDate();
                    java.sql.Date dataRet = new java.sql.Date(dataRetirada.getTime());
                    java.sql.Date dataEntre = new java.sql.Date(dataEntrega.getTime());
                    java.sql.Date dataAtua = new java.sql.Date(dataAtual.getTime());
                    String nome = (String) this.jCBGrupoCarro.getSelectedItem();
                    try {
                        gC = controlReserva.obertGrupoCarro(nome);
                    } catch (ConexaoException ex) {
                        Logger.getLogger(FrmReserva.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SQLException ex) {
                        Logger.getLogger(FrmReserva.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (MinhaException ex) {
                        Logger.getLogger(FrmReserva.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    if (dataAtua.after(dataRet))
                    {
                        JOptionPane.showMessageDialog(null, "É necessário Selecionar uma Data Depois de Hoje!","Atenção" , JOptionPane.WARNING_MESSAGE);
                    }


                    String cobertura = null;
                    if (jRBNao.isSelected()){
                        cobertura = "false";
                    }
                    if (jRBSim.isSelected()){
                        cobertura = "true";
                    }
                    Vector reser = new Vector();
                    reser.addElement(gC.get(5));    //cod_grupo_carro          //0
                    reser.addElement(gC.get(4));    //cod_tipo_carro           //1
                    reser.addElement(usuario.get(0));  //cod_cliente           //2
                    reser.addElement(dataRet);                                 //3
                    reser.addElement(this.jCBHoraRetirada.getSelectedItem());  //4
                    reser.addElement(dataEntre);           //5
                    reser.addElement(this.jCBHoraEntrega.getSelectedItem());   //6
                    reser.addElement(this.jTFValorPrevisto.getText().toString());         //7
                    reser.addElement(cobertura);                               //8
                    
                    try {
                        try {
                            this.controlReserva.inserirNovaReserva(reser);
                        } catch (ConexaoException ex) {
                            Logger.getLogger(FrmReserva.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        this.jDCDataEntrega.setDate(null);
                        this.jDCDataRetirada.setDate(null);
                        this.jCBHoraEntrega.setSelectedItem("08:00");
                        this.jCBHoraRetirada.setSelectedItem("08:00");
                        this.jTFKMPrevista.setText(null);
                        this.jTFValorPrevisto.setText(null);
                        JOptionPane.showMessageDialog(null, "Reserva Concluída!","Informação" , JOptionPane.INFORMATION_MESSAGE);
                        this.dispose();
                    } catch (MinhaException ex) {
                        Logger.getLogger(FrmReserva.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SQLException ex) {
                        Logger.getLogger(FrmReserva.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (ParseException ex) {
                        Logger.getLogger(FrmReserva.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                }else
                    JOptionPane.showMessageDialog(null, "É necessário Digitar o valor previsto da Quilometragem!","Atenção" , JOptionPane.WARNING_MESSAGE);
            }else
                JOptionPane.showMessageDialog(null, "É necessário Selecionar a Data de Entrega!","Atenção" , JOptionPane.WARNING_MESSAGE);
        }else
            JOptionPane.showMessageDialog(null, "É necessário Selecionar a Data de Retirada!","Atenção" , JOptionPane.WARNING_MESSAGE);
        
    }//GEN-LAST:event_jBConfirmarActionPerformed

    private void jTFKMPrevistaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFKMPrevistaFocusLost
        // TODO add your handling code here:
        double resultFinal = 0;
        double resultKM = 0;
        String nome = (String) this.jCBGrupoCarro.getSelectedItem();
        try {
            gC = controlReserva.obertGrupoCarro(nome);
        } catch (ConexaoException ex) {
            Logger.getLogger(FrmReserva.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FrmReserva.class.getName()).log(Level.SEVERE, null, ex);
        }catch (MinhaException ex) {
                Logger.getLogger(FrmReserva.class.getName()).log(Level.SEVERE, null, ex);
        }

        double diasSobrando = this.calcularDatas(this.jDCDataRetirada.getDate(),this.jDCDataEntrega.getDate());
        double precoDiario = Double.valueOf(gC.get(1).toString());
        double resultDiario = diasSobrando * precoDiario;

        if (this.jCBPlano.getSelectedItem().equals("Diaria Quilometrada")){
            double precoKM = Double.valueOf(gC.get(2).toString());
            double kmPrevisto = Integer.parseInt(this.jTFKMPrevista.getText());
            resultKM = kmPrevisto * precoKM;
                if (this.jRBSim.isSelected()){
                    double precoCobertura = Double.valueOf(gC.get(3).toString());
                    resultFinal = precoCobertura + resultDiario + resultKM;
                }else {
                    resultFinal = resultDiario + resultKM;
                }
        }else{
            if (this.jRBSim.isSelected()){
                double precoCobertura = Double.valueOf(gC.get(3).toString());
                resultFinal = precoCobertura + resultDiario + resultKM;
            }else {
                resultFinal = resultDiario + resultKM;
            }
        }

        this.jTFValorPrevisto.setText(String.valueOf(resultFinal));

    }//GEN-LAST:event_jTFKMPrevistaFocusLost

    /**
     * @param args the command line arguments
     
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    new FrmReserva().setVisible(true);
                } catch (ConexaoException ex) {
                    Logger.getLogger(FrmReserva.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(FrmReserva.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bGCobertura;
    private javax.swing.ButtonGroup bGPlano;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBConfirmar;
    private javax.swing.JButton jBVisualizarGrupo;
    private javax.swing.JComboBox jCBGrupoCarro;
    private javax.swing.JComboBox jCBHoraEntrega;
    private javax.swing.JComboBox jCBHoraRetirada;
    private javax.swing.JComboBox jCBPlano;
    private com.toedter.calendar.JDateChooser jDCDataEntrega;
    private com.toedter.calendar.JDateChooser jDCDataRetirada;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRBNao;
    private javax.swing.JRadioButton jRBSim;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTFKMPrevista;
    private javax.swing.JTextField jTFValorPrevisto;
    // End of variables declaration//GEN-END:variables
}
